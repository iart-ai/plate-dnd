"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __objRest = (source, exclude) => {
  var target = {};
  for (var prop in source)
    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)
      target[prop] = source[prop];
  if (source != null && __getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(source)) {
      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))
        target[prop] = source[prop];
    }
  return target;
};
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: true }) : target,
  mod
));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  PlateElement: () => PlateElement,
  PlateLeaf: () => PlateLeaf,
  createNodeHOC: () => createNodeHOC,
  createNodesHOC: () => createNodesHOC,
  createNodesWithHOC: () => createNodesWithHOC,
  defaultsDeepToNodes: () => defaultsDeepToNodes,
  isType: () => isType,
  onKeyDownToggleElement: () => onKeyDownToggleElement,
  onKeyDownToggleMark: () => onKeyDownToggleMark,
  selectEditor: () => selectEditor,
  useMarkToolbarButton: () => useMarkToolbarButton,
  useMarkToolbarButtonState: () => useMarkToolbarButtonState,
  usePlaceholderState: () => usePlaceholderState,
  usePlateElement: () => usePlateElement,
  usePlateLeaf: () => usePlateLeaf,
  useRemoveNodeButton: () => useRemoveNodeButton
});
module.exports = __toCommonJS(src_exports);

// src/PlateElement.tsx
var import_react = __toESM(require("react"));
var import_react_utils = require("@udecode/react-utils");
var import_clsx = require("clsx");
var usePlateElement = (props) => {
  const _a = props, {
    editor,
    attributes,
    nodeProps,
    element,
    elementToAttributes
  } = _a, rootProps = __objRest(_a, [
    "editor",
    "attributes",
    "nodeProps",
    "element",
    "elementToAttributes"
  ]);
  return {
    ref: (0, import_react_utils.useComposedRef)(props.ref, attributes.ref),
    props: __spreadProps(__spreadValues(__spreadValues(__spreadValues(__spreadValues({}, attributes), rootProps), nodeProps), elementToAttributes == null ? void 0 : elementToAttributes(element)), {
      className: (0, import_clsx.clsx)(props.className, nodeProps == null ? void 0 : nodeProps.className)
    })
  };
};
var PlateElement = import_react.default.forwardRef(
  (props, ref) => {
    const { ref: rootRef, props: rootProps } = usePlateElement(__spreadProps(__spreadValues({}, props), {
      ref
    }));
    return /* @__PURE__ */ import_react.default.createElement(import_react_utils.Box, __spreadProps(__spreadValues({}, rootProps), { ref: rootRef }));
  }
);
PlateElement.displayName = "PlateElement";

// src/PlateLeaf.tsx
var import_react2 = __toESM(require("react"));
var import_react_utils2 = require("@udecode/react-utils");
var import_clsx2 = require("clsx");
var usePlateLeaf = (props) => {
  const _a = props, {
    editor,
    attributes,
    nodeProps,
    text,
    leaf,
    leafToAttributes
  } = _a, rootProps = __objRest(_a, [
    "editor",
    "attributes",
    "nodeProps",
    "text",
    "leaf",
    "leafToAttributes"
  ]);
  return {
    ref: (0, import_react_utils2.useComposedRef)(props.ref, attributes.ref),
    props: __spreadProps(__spreadValues(__spreadValues(__spreadValues(__spreadValues({}, attributes), rootProps), nodeProps), leafToAttributes == null ? void 0 : leafToAttributes(leaf)), {
      className: (0, import_clsx2.clsx)(props.className, nodeProps == null ? void 0 : nodeProps.className)
    })
  };
};
var PlateLeaf = import_react2.default.forwardRef(
  (props, ref) => {
    const { ref: rootRef, props: rootProps } = usePlateLeaf(__spreadProps(__spreadValues({}, props), { ref }));
    return /* @__PURE__ */ import_react2.default.createElement(import_react_utils2.Text, __spreadProps(__spreadValues({}, rootProps), { ref: rootRef }));
  }
);
PlateLeaf.displayName = "PlateLeaf";

// src/createNodeHOC.tsx
var import_react3 = __toESM(require("react"));
var createNodeHOC = (HOC) => (Component, props) => function hoc(childrenProps) {
  return /* @__PURE__ */ import_react3.default.createElement(HOC, __spreadValues(__spreadValues({}, childrenProps), props), /* @__PURE__ */ import_react3.default.createElement(Component, __spreadValues({}, childrenProps)));
};

// src/createNodesHOC.tsx
var import_castArray = __toESM(require("lodash/castArray.js"));
var import_merge = __toESM(require("lodash/merge.js"));
var createHOC = (withHOC) => {
  return (components, options) => {
    const _components = __spreadValues({}, components);
    const optionsByKey = {};
    const optionsList = (0, import_castArray.default)(options);
    optionsList.forEach((_a) => {
      var _b = _a, { key, keys } = _b, opt = __objRest(_b, ["key", "keys"]);
      const _keys = key ? [key] : keys != null ? keys : Object.keys(_components);
      _keys.forEach((_key) => {
        optionsByKey[_key] = (0, import_merge.default)(optionsByKey[_key], opt);
      });
    });
    Object.keys(optionsByKey).forEach((key) => {
      if (!_components[key])
        return;
      _components[key] = withHOC(_components[key], optionsByKey[key]);
    });
    return _components;
  };
};
var createNodesHOC = (HOC) => {
  return createHOC(createNodeHOC(HOC));
};
var createNodesWithHOC = (withHOC) => {
  return createHOC(withHOC);
};

// src/defaultsDeepToNodes.ts
var import_plate_core = require("@udecode/plate-core");
var import_defaults = __toESM(require("lodash/defaults.js"));
var defaultsDeepToNodes = (options) => {
  (0, import_plate_core.applyDeepToNodes)(__spreadProps(__spreadValues({}, options), { apply: import_defaults.default }));
};

// src/isType.ts
var import_plate_core2 = require("@udecode/plate-core");
var import_castArray2 = __toESM(require("lodash/castArray.js"));
var isType = (editor, node, key) => {
  const keys = (0, import_castArray2.default)(key);
  const types = [];
  keys.forEach((_key) => types.push((0, import_plate_core2.getPluginType)(editor, _key)));
  return types.includes(node == null ? void 0 : node.type);
};

// src/onKeyDownToggleElement.ts
var import_plate_core3 = require("@udecode/plate-core");
var import_castArray3 = __toESM(require("lodash/castArray.js"));
var onKeyDownToggleElement = (editor, { type, options: { hotkey } }) => (e) => {
  if (e.defaultPrevented)
    return;
  const defaultType = (0, import_plate_core3.getPluginType)(editor, import_plate_core3.ELEMENT_DEFAULT);
  if (!hotkey)
    return;
  const hotkeys = (0, import_castArray3.default)(hotkey);
  for (const _hotkey of hotkeys) {
    if ((0, import_plate_core3.isHotkey)(_hotkey, e)) {
      e.preventDefault();
      (0, import_plate_core3.toggleNodeType)(editor, {
        activeType: type,
        inactiveType: defaultType
      });
      return;
    }
  }
};

// src/onKeyDownToggleMark.ts
var import_plate_core4 = require("@udecode/plate-core");
var import_slate_utils = require("@udecode/slate-utils");
var onKeyDownToggleMark = (editor, {
  type,
  options: { hotkey, clear }
}) => (e) => {
  if (e.defaultPrevented)
    return;
  if (!hotkey)
    return;
  if ((0, import_plate_core4.isHotkey)(hotkey, e)) {
    e.preventDefault();
    (0, import_slate_utils.toggleMark)(editor, { key: type, clear });
  }
};

// src/selectEditor.ts
var import_slate = require("@udecode/slate");
var import_slate_react = require("@udecode/slate-react");
var selectEditor = (editor, { at, edge, focus }) => {
  if (focus) {
    (0, import_slate_react.focusEditor)(editor);
  }
  let location = at;
  if (edge === "start") {
    location = (0, import_slate.getStartPoint)(editor, []);
  }
  if (edge === "end") {
    location = (0, import_slate.getEndPoint)(editor, []);
  }
  if (location) {
    (0, import_slate.select)(editor, location);
  }
};

// src/useMarkToolbarButton.ts
var import_plate_core5 = require("@udecode/plate-core");
var import_slate_utils2 = require("@udecode/slate-utils");
var useMarkToolbarButtonState = ({
  nodeType,
  clear
}) => {
  const pressed = (0, import_plate_core5.useEditorSelector)(
    (editor) => (0, import_slate_utils2.isMarkActive)(editor, nodeType),
    [nodeType]
  );
  return {
    pressed,
    nodeType,
    clear
  };
};
var useMarkToolbarButton = (state) => {
  const editor = (0, import_plate_core5.useEditorRef)();
  return {
    props: {
      pressed: state.pressed,
      onMouseDown: (e) => {
        e.preventDefault();
      },
      onClick: () => {
        (0, import_slate_utils2.toggleMark)(editor, { key: state.nodeType, clear: state.clear });
      }
    }
  };
};

// src/usePlaceholder.ts
var import_plate_core6 = require("@udecode/plate-core");
var import_slate2 = require("@udecode/slate");
var import_slate_react2 = require("@udecode/slate-react");
var import_slate_react3 = require("slate-react");
var usePlaceholderState = ({
  hideOnBlur = true,
  query,
  element
}) => {
  const focused = (0, import_slate_react3.useFocused)();
  const selected = (0, import_slate_react3.useSelected)();
  const editor = (0, import_plate_core6.useEditorRef)();
  const isEmptyBlock = (0, import_slate2.isElementEmpty)(editor, element);
  const enabled = isEmptyBlock && (!query || (0, import_slate2.queryNode)([element, (0, import_slate_react2.findNodePath)(editor, element)], query)) && (!hideOnBlur || (0, import_slate2.isCollapsed)(editor.selection) && hideOnBlur && focused && selected);
  return {
    enabled
  };
};

// src/useRemoveNodeButton.ts
var import_plate_core7 = require("@udecode/plate-core");
var import_slate3 = require("@udecode/slate");
var import_slate_react4 = require("@udecode/slate-react");
var useRemoveNodeButton = ({ element }) => {
  const editor = (0, import_plate_core7.useEditorRef)();
  return {
    props: {
      onMouseDown: (e) => {
        e.preventDefault();
      },
      onClick: () => {
        const path = (0, import_slate_react4.findNodePath)(editor, element);
        (0, import_slate3.removeNodes)(editor, { at: path });
      }
    }
  };
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  PlateElement,
  PlateLeaf,
  createNodeHOC,
  createNodesHOC,
  createNodesWithHOC,
  defaultsDeepToNodes,
  isType,
  onKeyDownToggleElement,
  onKeyDownToggleMark,
  selectEditor,
  useMarkToolbarButton,
  useMarkToolbarButtonState,
  usePlaceholderState,
  usePlateElement,
  usePlateLeaf,
  useRemoveNodeButton
});
//# sourceMappingURL=index.js.map